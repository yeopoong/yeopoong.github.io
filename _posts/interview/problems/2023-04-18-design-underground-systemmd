---
layout: post
published: true
title: "1396. Design Underground System"
categories: interview
tags: medium design
---

> 지하 철도 시스템은 서로 다른 역 사이의 고객 이동 시간을 추적하고 있습니다.  
> 그들은 이 데이터를 사용하여 한 역에서 다른 역으로 이동하는 데 걸리는 평균 시간을 계산하고 있습니다.

[1396. Design Underground System](https://leetcode.com/problems/design-underground-system/)

Edge Case
- checkIn 및 checkOut 메소드에 대한 모든 호출이 일관성이 있다고 가정
- 고객이 시간 t1에 체크인하고 시간 t2에 체크아웃하면 t1 < t2
- 모든 이벤트는 시간순으로 발생

```java
class UndergroundSystem {
    
    Map<Integer, Pair<String, Integer>> checkInMap = new HashMap<>();  // Uid - {StationName, Time}
    Map<String, Pair<Double, Integer>> routeMap = new HashMap<>();     // RouteName - {TotalTime, Count}

    public UndergroundSystem() {}

    public void checkIn(int id, String stationName, int t) {
        checkInMap.put(id, new Pair<>(stationName, t));
    }

    public void checkOut(int id, String stationName, int t) {
        // 체크인 정보를 조회한다.
        Pair<String, Integer> checkIn = checkInMap.get(id);
        checkInMap.remove(id); // Remove after using it which will not make HashTable big

        // 시작_종료 구간을 구한다.
        String routeName = checkIn.getKey() + "_" + stationName;
        // 소요시간을 구한다.
        int totalTime = t - checkIn.getValue();

        // 구간별 총시간과 총건수를 갱신한다.
        Pair<Double, Integer> route = routeMap.getOrDefault(routeName, new Pair<>(0.0, 0));
        routeMap.put(routeName, new Pair<>(route.getKey() + totalTime, route.getValue() + 1));
    }

    // startStation에서 endStation까지 이동하는 데 걸리는 평균 시간을 반환
    // 평균시간 = 총시간 / 총건수
    public double getAverageTime(String startStation, String endStation) {
        String routeName = startStation + "_" + endStation;
        Pair<Double, Integer> trip = routeMap.get(routeName);
        
        return trip.getKey() / trip.getValue();
    }
}

/**
 * Your UndergroundSystem object will be instantiated and called as such:
 * UndergroundSystem obj = new UndergroundSystem();
 * obj.checkIn(id,stationName,t);
 * obj.checkOut(id,stationName,t);
 * double param_3 = obj.getAverageTime(startStation,endStation);
 */
```